{"version":3,"file":"semantic-api.min.js","sources":["../src/semantic-api.ts"],"sourcesContent":["interface customFunc {\r\n    (args: any[], calls: any[], url: string): void\r\n}\r\n\r\ninterface customMethods {\r\n    [propName:string]: customFunc\r\n}\r\n\r\ninterface queryOption {\r\n    [propName:string]: any\r\n}\r\n\r\ninterface semanticInstance{\r\n    [propName:string]: any\r\n}\r\n\r\nconst checkProxySupport = () => {\r\n    if (typeof Proxy === 'function') return\r\n    throw new Error('Proxy is not supported.')\r\n}\r\n\r\nconst isReflectorMethod = (methodName: string) => {\r\n    const reflectors = [\r\n        'valueOf',\r\n        'inspect',\r\n        'toString',\r\n        'constructor',\r\n        Symbol.toPrimitive,\r\n        Symbol.toStringTag,\r\n        Symbol.for('util.inspect.custom'),\r\n        Symbol.for('nodejs.util.inspect.custom')\r\n    ]\r\n    return reflectors.includes(methodName)\r\n}\r\n\r\nconst query = (args: any[], calls: any[], url: string) => {\r\n    const queryString = (opts: queryOption) => Object.keys(opts).map(key => `${key}=${encodeURIComponent(opts[key])}`).join('&')\r\n    const data = args.shift()\r\n    const prev = calls.pop() || ''\r\n    const result = data ? `${prev}?${queryString(data)}` : 'query'\r\n    calls.push(result)\r\n}\r\n\r\n/**\r\n * @param {string} baseUrl the baseUrl that will be added at the start of url\r\n * @param {object} customFunctions key-value custom method function\r\n */\r\nfunction SemanticApi (baseUrl: string = '', customFunctions: customMethods = {}): semanticInstance {\r\n    checkProxySupport()\r\n\r\n    let calls: string[] = []\r\n    const delimiter = '/'\r\n    const toString = () => baseUrl + calls.join(delimiter)\r\n\r\n    // Create proxy and declare set/apply trap\r\n    let proxy: null|Function = null\r\n    const methodList: customMethods = { query, ...customFunctions }\r\n    const isMethod = (name: string) => methodList.hasOwnProperty(name) && typeof methodList[name] === 'function'\r\n\r\n    const createProxy = () => {\r\n        const getTrap = (target: any, property: string, receiver: any) => {\r\n            if (isReflectorMethod(property)) return () => toString()\r\n            else calls.push(property)\r\n\r\n            return proxy\r\n        }\r\n\r\n        const applyTrap = (target: any, receiver: any, args: any[]) => {\r\n            const methodName = calls.pop()\r\n            if (isMethod(methodName)) {\r\n                const url = toString()\r\n                const result = methodList[methodName].call(this, args, calls, url)\r\n                if (result !== undefined) return result\r\n            } else {\r\n                calls.push(methodName, ...args)\r\n            }\r\n\r\n            return proxy\r\n        }\r\n\r\n        const noop = Object.seal(() => {})\r\n        return new Proxy(noop, { get: getTrap, apply: applyTrap })\r\n    }\r\n\r\n    proxy = createProxy()\r\n    return proxy\r\n}\r\n\r\nmodule.exports = SemanticApi\r\n"],"names":["checkProxySupport","Proxy","Error","isReflectorMethod","methodName","Symbol","toPrimitive","toStringTag","for","includes","query","args","calls","url","data","shift","prev","pop","result","opts","Object","keys","map","key","encodeURIComponent","join","queryString","push","module","exports","baseUrl","customFunctions","toString","proxy","methodList","noop","seal","get","target","property","receiver","apply","name","hasOwnProperty","isMethod","call","this","undefined","createProxy"],"mappings":"kNAgBA,MAAMA,EAAoB,QACD,mBAAVC,YACL,IAAIC,MAAM,4BAGdC,EAAqBC,UACJ,CACf,UACA,UACA,WACA,cACAC,OAAOC,YACPD,OAAOE,YACPF,OAAOG,IAAI,uBACXH,OAAOG,IAAI,+BAEGC,SAASL,IAGzBM,EAAQ,CAACC,EAAaC,EAAcC,WAEhCC,EAAOH,EAAKI,QACZC,EAAOJ,EAAMK,OAAS,GACtBC,EAASJ,YAAUE,cAHJG,CAAAA,GAAsBC,OAAOC,KAAKF,GAAMG,IAAIC,aAAUA,cAAOC,mBAAmBL,EAAKI,MAASE,KAAK,KAGvFC,CAAYZ,IAAU,QACvDF,EAAMe,KAAKT,IAgDfU,OAAOC,QAzCP,SAAsBC,EAAkB,GAAIC,EAAiC,IACzE/B,QAEIY,EAAkB,SAEhBoB,EAAW,IAAMF,EAAUlB,EAAMa,KADrB,SAIdQ,EAAuB,WACrBC,sUAA8BxB,MAAAA,GAAUqB,UA4B9CE,EAzBoB,YAqBVE,EAAOf,OAAOgB,KAAK,eAClB,IAAInC,MAAMkC,EAAM,CAAEE,IArBT,CAACC,EAAaC,EAAkBC,IACxCrC,EAAkBoC,GAAkB,IAAMP,KACzCpB,EAAMe,KAAKY,GAETN,GAiB4BQ,MAdrB,CAACH,EAAaE,EAAe7B,WACrCP,EAAaQ,EAAMK,SAXfyB,CAAAA,GAAiBR,EAAWS,eAAeD,IAAqC,mBAArBR,EAAWQ,GAY5EE,CAASxC,GAAa,OAChBS,EAAMmB,IACNd,EAASgB,EAAW9B,GAAYyC,KAAKC,KAAMnC,EAAMC,EAAOC,WAC/CkC,IAAX7B,EAAsB,OAAOA,OAEjCN,EAAMe,KAAKvB,KAAeO,UAGvBsB,MAOPe"}