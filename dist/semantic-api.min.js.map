{"version":3,"file":"semantic-api.min.js","sources":["../src/semantic-api.ts"],"sourcesContent":["interface customFunc {\r\n    (method: string, data: string, args: any[], url: string): void\r\n}\r\n\r\ninterface customMethods {\r\n    [propName:string]: customFunc\r\n}\r\n\r\nclass SemanticApi {\r\n    public calls: string[]\r\n    private _proxy: any\r\n    protected baseUrl: string\r\n    protected delimiter: string\r\n    protected methods: customMethods\r\n\r\n    /**\r\n     * @param {string} baseUrl the baseUrl that will be added at the start of url\r\n     * @param {object} customMethods key-value custom method function\r\n     */\r\n    constructor (baseUrl = '', customMethods = {}) {\r\n        this.calls = []\r\n        this.delimiter = '/'\r\n        this.baseUrl = baseUrl\r\n        this.methods = {\r\n            query: function (method: string, data: any, args: any[], url: string) {\r\n                if (data === undefined) {\r\n                    this.push(method)\r\n                } else {\r\n                    const prev = this.pop()\r\n                    const queryStringify = (opts: {[prop: string]: string|number} = {}) => Object.keys(opts).map(name => `${name}=${opts[name]}`).join('&')\r\n                    this.push(`${prev}?${queryStringify(data)}`)\r\n                }\r\n            }\r\n        }\r\n\r\n        this.methods = { ...this.methods, ...customMethods }\r\n        this._proxy = this._buildProxy()\r\n        return this._proxy\r\n    }\r\n\r\n    /**\r\n     * return is ES6-Proxy supported\r\n     */\r\n    _isSupportProxy () {\r\n        return typeof Proxy === 'function'\r\n    }\r\n\r\n    /**\r\n     * check is method exist and is it a function\r\n     * @param {string} methodName\r\n     */\r\n    _isMethod (methodName: string) {\r\n        return this.methods.hasOwnProperty(methodName) && typeof this.methods[methodName] === 'function'\r\n    }\r\n\r\n    /**\r\n     * check is it a method that want to get our value\r\n     * @param {string} methodName\r\n     */\r\n    _isPeekingMethod (methodName: string) {\r\n        const reflectors = [\r\n            'toString', 'valueOf', 'inspect', 'constructor',\r\n            Symbol.toPrimitive,\r\n            Symbol.for('util.inspect.custom'),\r\n            // https://github.com/targos/node/commit/cc9898bd7747d2884afe9da8fff7e954225ba347\r\n            Symbol.for('nodejs.util.inspect.custom')\r\n        ]\r\n        return reflectors.includes(methodName)\r\n    }\r\n\r\n    /**\r\n     * handler when proxy trap get triggered\r\n     * @param {string} property the property/method name being accessed\r\n     */\r\n    onTrapTriggered (property: string, ...args: any[]) {\r\n        this.push(property, ...args)\r\n    }\r\n\r\n    _buildProxy () {\r\n        if (!this._isSupportProxy()) {\r\n            throw new Error('Proxy is not supported in current environment.')\r\n        }\r\n\r\n        // Non-extensible object\r\n        const noop = Object.seal(() => {})\r\n        const handler = {\r\n            get: (target: any, property: string, receiver: any) => {\r\n                if (this._isPeekingMethod(property)) {\r\n                    return () => this.toString()\r\n                }\r\n\r\n                this.onTrapTriggered(property)\r\n                return this._proxy\r\n            },\r\n\r\n            apply: (target: any, receiver: any, args: any[]) => {\r\n                const methodName = this.pop()\r\n\r\n                if (this._isMethod(methodName)) {\r\n                    const value = args.shift()\r\n                    let result = this.methods[methodName].call(this, methodName, value, args, this.toString())\r\n                    if (result !== undefined) return result\r\n                } else {\r\n                    this.onTrapTriggered(methodName, ...args)\r\n                }\r\n\r\n                return this._proxy\r\n            }\r\n        }\r\n\r\n        return new Proxy(noop, handler)\r\n    }\r\n\r\n    /**\r\n     * push item to call list\r\n     * @param {string|number} item\r\n     * @param args\r\n     */\r\n    push (item: string|number, ...args: any[]) {\r\n        if (args.length) args = args.map(arg => arg.toString())\r\n        this.calls.push(item.toString(), ...args)\r\n    }\r\n\r\n    /**\r\n     * pop item from call list\r\n     */\r\n    pop (): string {\r\n        return this.calls.pop()\r\n    }\r\n\r\n    toString () {\r\n        return this.baseUrl + this.calls.join(this.delimiter)\r\n    }\r\n}\r\n\r\nmodule.exports = SemanticApi\r\n"],"names":["module","exports","constructor","baseUrl","customMethods","calls","delimiter","methods","query","method","data","args","url","undefined","push","prev","this","pop","queryStringify","opts","Object","keys","map","name","join","_proxy","_buildProxy","_isSupportProxy","Proxy","_isMethod","methodName","hasOwnProperty","_isPeekingMethod","Symbol","toPrimitive","for","includes","onTrapTriggered","property","Error","noop","seal","get","target","receiver","toString","apply","value","shift","result","call","item","length","arg"],"mappings":"kNAuIAA,OAAOC,QA/HP,MAWIC,kBAAaC,yDAAU,GAAIC,yDAAgB,2IAClCC,MAAQ,QACRC,UAAY,SACZH,QAAUA,OACVI,QAAU,CACXC,MAAO,SAAUC,EAAgBC,EAAWC,EAAaC,WACxCC,IAATH,OACKI,KAAKL,OACP,OACGM,EAAOC,KAAKC,MACZC,EAAiB,eAACC,yDAAwC,UAAOC,OAAOC,KAAKF,GAAMG,IAAIC,aAAWA,cAAQJ,EAAKI,KAASC,KAAK,WAC9HV,eAAQC,cAAQG,EAAeR,aAK3CH,8UAAeS,KAAKT,QAAYH,QAChCqB,OAAST,KAAKU,cACZV,KAAKS,OAMhBE,wBAC4B,mBAAVC,MAOlBC,UAAWC,UACAd,KAAKT,QAAQwB,eAAeD,IAAmD,mBAA7Bd,KAAKT,QAAQuB,GAO1EE,iBAAkBF,SACK,CACf,WAAY,UAAW,UAAW,cAClCG,OAAOC,YACPD,OAAOE,IAAI,uBAEXF,OAAOE,IAAI,+BAEGC,SAASN,GAO/BO,gBAAiBC,8BAAqB3B,mCAAAA,yBAC7BG,KAAKwB,KAAa3B,GAG3Be,kBACSV,KAAKW,wBACA,IAAIY,MAAM,wDAIdC,EAAOpB,OAAOqB,KAAK,eA0BlB,IAAIb,MAAMY,EAzBD,CACZE,IAAK,CAACC,EAAaL,EAAkBM,IAC7B5B,KAAKgB,iBAAiBM,GACf,IAAMtB,KAAK6B,iBAGjBR,gBAAgBC,GACdtB,KAAKS,QAGhBqB,MAAO,CAACH,EAAaC,EAAejC,WAC1BmB,EAAad,KAAKC,SAEpBD,KAAKa,UAAUC,GAAa,OACtBiB,EAAQpC,EAAKqC,YACfC,EAASjC,KAAKT,QAAQuB,GAAYoB,KAAKlC,KAAMc,EAAYiB,EAAOpC,EAAMK,KAAK6B,oBAChEhC,IAAXoC,EAAsB,OAAOA,YAE5BZ,gBAAgBP,KAAenB,UAGjCK,KAAKS,UAYxBX,KAAMqC,8BAAwBxC,mCAAAA,oBACtBA,EAAKyC,SAAQzC,EAAOA,EAAKW,IAAI+B,GAAOA,EAAIR,kBACvCxC,MAAMS,KAAKqC,EAAKN,cAAelC,GAMxCM,aACWD,KAAKX,MAAMY,MAGtB4B,kBACW7B,KAAKb,QAAUa,KAAKX,MAAMmB,KAAKR,KAAKV"}